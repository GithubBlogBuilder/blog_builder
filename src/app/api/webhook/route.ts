import { NextRequest, NextResponse } from "next/server";

// /**
//  * This secret is generated by python `secrets.token_urlsafe()`
//  * (`secrets` is a built-in module that can be imported directly),
//  * and it can be changed in Webhook scope in
//  * [App Setting](https://github.com/organizations/GithubBlogBuilder/settings/apps/blogbuilderagent)
//  */
// const SECRET = "TFdZoGVTWIIoVxHhWW4k7KP7Zi7ROuCukNmMOpzDAqo";

export async function POST(request: NextRequest) {
    const payload = await request.json();
    const workflowRun: WorkflowRun = {
        workflowId: payload["workflow_run"]["workflow_id"],
        username: payload["workflow_run"]["actor"]["login"],
        clientId: payload["workflow_run"]["actor"]["id"],
        status: payload["workflow_run"]["status"],
        conclusion: payload["workflow_run"]["conclusion"],
        updatedAt: payload["workflow_run"]["updated_at"],
    }
    console.log(workflowRun);
    return new Response(null, { status: 204 });
}

enum WorkflowStatus {
    Queued = "queued",
    Requested = "requested",
    InProgress = "in_progress",
    Completed = "completed",
    Pending = "pending",
    Waiting = "waiting",
}

enum WorkflowConclusion {
    ActionRequired = "action_required",
    Success = "success",
    Failure = "failure",
    Cancelled = "cancelled",
    Neutral = "neutral",
    Skipped = "skipped",
    Stale = "Stale",
    TimeOut = "timed_out",
}

type WorkflowRun = {
    workflowId: number
    username: string
    clientId: number
    status: WorkflowStatus
    conclusion: WorkflowConclusion | null
    updatedAt: string
};
